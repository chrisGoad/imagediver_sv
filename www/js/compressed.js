function browserCheck(){var ua=navigator.userAgent;if(ua.indexOf("Firefox")>=0)return"firefox"
if(ua.indexOf("Chrome")>=0)return"chrome";if(ua.indexOf("Safari")>=0)return"safari";var iere=/MSIE (\d)/;var m=ua.match(iere);if(!m)return"unknown"; var v=parseInt(m[1]);return v;}
function browserCheckAction(){var br=browserCheck();if(typeof br=="number"){if(br<9){location.href="/unsupported_browser";}}else{if(br=="unknown"){location.href="/unsupported_browser";}}}
browserCheckAction();
idv={};idv.util={};(function(){var lib=idv.util;lib.activeConsoleTags=[];lib.log=function(tag){return;if(($.inArray("all",lib.activeConsoleTags)>=0)||($.inArray(tag,lib.activeConsoleTags)>=0)){if(typeof window=="undefined"){system.stdout(tag+JSON.stringify(arguments));}else{console.log(tag,arguments);}}};lib.error=function(a,b){console.log("Error "+a,b);foob();};lib.post=function(url,data,callback){if(typeof data=="string"){dataj=data;}else{var dataj=JSON.stringify(data);}
$.ajax({url:url,data:dataj,cache:false,contentType:"application/json",type:"POST",dataType:"json",success:callback});}})();
var GEOM2D={};exports.GEOM2D=GEOM2D;(function(){var lib=GEOM2D;lib.Point=function(x,y){this.x=x;this.y=y;}
lib.Point.prototype.times=function(z){return new lib.Point(z*this.x,z*this.y);}
lib.Point.prototype.timesX=function(z){return new lib.Point(z*this.x,this.y);} 
lib.Point.prototype.divideBy=function(z){var x=this.x;var y=this.y;if(!z)debugger;if(typeof z=="number"){return new lib.Point(x/z,y/z);}
return new lib.Point(x/(z.x),y/(z.y));}
lib.Point.prototype.plus=function(p){return new lib.Point(this.x+p.x,this.y+p.y);}
lib.Point.prototype.minus=function(p){if(typeof p=="undefined"){return new lib.Point(-this.x,-this.y);}
return new lib.Point(this.x-p.x,this.y-p.y);}
lib.Point.prototype.clone=function(){return new lib.Point(this.x,this.y);}
lib.Point.prototype.externalize=function(){return{x:this.x,y:this.y}} 
lib.Point.prototype.interpolate=function(p1,v){var xd=p1.x-this.x;var yd=p1.y-this.y;return new lib.Point(this.x+v*xd,this.y+v*yd);}
lib.internalizePoint=function(p){return new lib.Point(p.x,p.y);}
lib.Bounds=function(min,max){this.min=min;this.max=max;}
lib.Bounds.prototype.intersect=function(b){var min=Math.max(this.min,b.min);var max=Math.min(this.max,b.max);if(min>=max)return null;return new lib.Bounds(min,max);}
lib.Rect=function(corner,extent){this.corner=corner;this.extent=extent;}
lib.Rect.prototype.times=function(s){return new lib.Rect(this.corner.times(s),this.extent.times(s));} 
lib.Rect.prototype.scale=function(s){var center=this.center();var cornerRelCenter=this.corner.minus(center);var newCorner=center.plus(cornerRelCenter.times(s));return new lib.Rect(newCorner,this.extent.times(s));}
lib.Rect.prototype.applyPointOperation=function(f){var ul=this.corner;var lr=this.lowerRight();var vul=f(ul);var vlr=f(lr);return lib.newRectFromCorners(vul,vlr);}
lib.Rect.prototype.plus=function(p){var c=this.corner;var nc=c.plus(p);return new lib.Rect(nc,this.extent);} 
lib.Rect.prototype.tostring=function(){var c=this.corner;var ex=this.extent;return"[rect ("+Math.floor(c.x)+","+Math.floor(c.y)+")("+Math.floor(ex.x)+","+Math.floor(ex.y)+")]"}
lib.Rect.prototype.interpolate=function(r1,v){var ixt=this.extent.interpolate(r1.extent,v);var ic=this.corner.interpolate(r1.corner,v);return new lib.Rect(ic,ixt);}
lib.internalizeRect=function(r){return new lib.Rect(lib.internalizePoint(r.corner),lib.internalizePoint(r.extent));}
lib.Rect.prototype.externalize=function(){return{corner:this.corner.externalize(),extent:this.extent.externalize()};}
lib.Rect.prototype.clone=function(){return new lib.Rect(this.corner,this.extent);}
lib.Rect.prototype.maxX=function(){return this.corner.x+this.extent.x;}
lib.Rect.prototype.maxY=function(){return this.corner.y+this.extent.y;}
lib.Rect.prototype.center=function(){var c=this.corner;var ext=this.extent;var cntx=c.x+0.5*ext.x;var cnty=c.y+0.5*ext.y;return new lib.Point(cntx,cnty);}
lib.Rect.prototype.lowerRight=function(){return this.corner.plus(this.extent);}
lib.Rect.prototype.yBounds=function(){return new lib.Bounds(this.corner.y,this.corner.y+this.extent.y);}
lib.Rect.prototype.xBounds=function(){return new lib.Bounds(this.corner.x,this.corner.x+this.extent.x);}
lib.newRectFromBounds=function(xb,yb){var c=new lib.Point(xb.min,yb.min);var xt=new lib.Point(xb.max-xb.min,yb.max-yb.min);return new lib.Rect(c,xt);}
lib.newRectFromCorners=function(ur,ll){var xt=ll.minus(ur);return new lib.Rect(ur,xt);}
lib.Rect.prototype.intersect=function(rc){var xb=this.xBounds().intersect(rc.xBounds());if(!xb)return null;var yb=this.yBounds().intersect(rc.yBounds());if(!yb)return null;return lib.newRectFromBounds(xb,yb);}
lib.Grid=function(rows,corner,extent){this.rows=rows; this.rowCount=rows.length;this.colCount=rows[0].length;var xInc=extent.x/(this.rowCount-1);var yInc=extent.y/(this.colCount-1);this.corner=corner;this.extent=extent;this.cellDim=new lib.Point(xInc,yInc);}
lib.Grid.prototype.inCell=function(p){var rc=p.minus(this.corner);var cellDim=this.cellDim;var xidx=Math.floor(rc.x/cellDim.x);var yidx=Math.floor(rc.y/cellDim.y);var cell=new lib.Point(xidx,yidx);var cellDim=this.cellDim;var relcell=p.minus(p,new lib.Point(xidx*cellDim.x,yidx*cellDim.y));var normalizedRelcell=relcell.divideBy(cellDim);return{cell:cell,withinCell:normalizedRelcell};}
lib.Grid.prototype.valueAtGridPoint=function(p){ var rows=this.rows;var row=rows[p.y];return row[p.x];}
lib.Grid.prototype.valueAtPoint=function(p){var cin=this.inCell(p);var c=cin.cell;var incell=cin.withinCell;var vp0=this.valueAtGridPoint(c);var vp1=this.valueAtGridPoint(new lib.Point(c.x+1,c.y));var vp2=this.valueAtGridPoint(new lib.Point(c.x,c.y+1));var vp3=this.valueAtGridPoint(new lib.Point(c.x+1,c.y+1));var incx=incell.x;var incy=incell.y;var topI=vp0*(1-incx)+vp1*incx;var bottomI=vp2*(1-incx)+vp1*incx;var rs=topI*(1-incy)+bottomI*incy;return rs;} 
lib.Grid1=function(values,lb,ub){this.values=values;this.count=values.length;this.increment=(ub-lb)/(this.count-1);this.lb=lb;this.ub=ub;}
lib.Grid1.prototype.inCell=function(x){var lb=this.lb;var r=x-lb;var inc=this.increment
var idx=Math.floor(r/inc);var relcell=(r-idx*inc)/inc;return{cell:idx,withinCell:relcell};}
lib.Grid1.prototype.valueAt=function(x){var cin=this.inCell(x);var idx=cin.cell;var incell=cin.withinCell;var values=this.values;var v0=values[idx];var v1=values[idx+1];var rs=v1*incell+v0*(1-incell);return rs;}
lib.scaleRect=function(rect,corner,scale){var nex=rect.extent.times(scale);var rs=new lib.Rect(corner,nex);return rs;}
lib.scaleRectX=function(rect,corner,scale){var nex=rect.extent.timesX(scale);var rs=new lib.Rect(corner,nex);return rs;}})();
var IMAGE={};exports.IMAGE=IMAGE;(function(){var lib=IMAGE;var Process;var geom;if(typeof require=="function"){ Process=require("process").Process;geom=require('/var/www/neo.com/lib/geom2d.js').GEOM2D;}else{geom=exports.GEOM2D;}
lib.process=null;lib.system=function(cmd){lib.allocProcess();return lib.process.system(cmd);}
lib.allocProcess=function(){if(!lib.process){lib.process=new Process();}}
lib.Image=function(extent,filename){this.extent=extent;this.filename=filename;}
lib.Tiling=function(image,tileImageSize,aspectRatio,directory,url,depthIncrement){var di=depthIncrement?depthIncrement:0;this.image=image;var imxt=image.extent;var height=imxt.y;var width=imxt.x;var topTileSizeH=Math.pow(2,Math.ceil(Math.log(height)/Math.LN2));var topTileSizeW=Math.pow(2,Math.ceil(Math.log(width)/Math.LN2));var topTileSize=Math.max(topTileSizeH,topTileSizeW);
this.depth=Math.ceil(Math.log(topTileSize/tileImageSize)/Math.LN2)+di;this.aspectRatio=aspectRatio; this.topTileSize=topTileSize;this.tiles=[];this.tilesById={};this.directory=directory; this.url=url; this.tileImageSize=tileImageSize;}
lib.Tile=function(tiling,path){this.tiling=tiling;this.path=path;}
lib.Tile.prototype.computeExtent=function(){if(this.outsideImage)return;var tl=this.tiling;var ar=tl.aspectRatio;var tim=tl.image;var imxt=tim.extent;var imwd=imxt.x;var imht=imxt.y;var imsz=tl.tileImageSize;var srcszx=this.size;var srcszy=ar*srcszx;var cr=this.corner;var x=cr.x;var y=cr.y;var ex=Math.min(imwd-x,srcszx); var ey=Math.min(imht-y,srcszy);if(ey<0){debugger;}
var imszx=Math.floor(imsz*(ex/srcszx));var imszy=Math.floor(ar*imsz*(ey/srcszy));this.extent=new geom.Point(imszx,imszy); this.coverage=new geom.Point(ex,ey);}
lib.Tiling.prototype.newTile=function(path){var id="r"+path.join("");var byId=this.tilesById;var tl=byId[id];if(tl)return tl;var rs=new lib.Tile(this,path);rs.id=id;var ln=path.length;var tim=this.image;var timxt=tim.extent;var tts=this.topTileSize;var csz=tts;var cx=0;var cy=0;var ar=this.aspectRatio;for(var i=0;i<ln;i++){csz=csz/2;cpe=path[i];switch(cpe){case 1:cx=cx+csz;break;case 2:cy=cy+ar*csz;break;case 3:cx=cx+csz;cy=cy+ar*csz;break;}}
rs.corner=new geom.Point(cx,cy);rs.size=csz;
rs.id=id;var outside=(cx>=timxt.x)||(cy>=timxt.y); byId[id]=rs;if(!outside)this.tiles.push(rs);rs.outsideImage=outside;rs.computeExtent();return rs;}
lib.Tile.prototype.parent=function(){var path=this.path;if(path.length==0)return null;var ppath=path.slice(0,path.length-1);var pid="r"+ppath.join("");return this.tiling.tilesById[pid]}
lib.Tile.prototype.createImageFile=function(){if(this.outsideImage)return;var xt=this.extent;var cv=this.coverage;var cx=cv.x;var cy=cv.y;var ex=xt.x;var ey=xt.y;var tl=this.tiling;var ar=tl.aspectRatio;var tim=tl.image;var imxt=tim.extent;var imwd=imxt.x;var imht=imxt.y;var imsz=tl.tileImageSize;var cr=this.corner;var x=cr.x;var y=cr.y;var dstfile=(tl.directory)+(this.id)+".jpg";var fl=new File(dstfile);if(fl.exists()){system.stdout(dstfile+" exists\n\n");return;}
var cmd="convert -size "+imwd+"x"+imht+" -depth 8 -extract "+cx+"x"+cy+"+"+x+"+"+y+" -resize "+ex+"x"+ey+" "+(tim.filename)+"[1] "+dstfile;if(typeof system=="undefined")return cmd;system.stdout(cmd+"\n");lib.system(cmd);system.stdout("done\n\n");}
lib.Tiling.prototype.createImageFiles=function(){var tiles=this.tiles;var ln=tiles.length;for(var i=0;i<ln;i++){var ct=tiles[i];ct.createImageFile();}} 
lib.Tiling.prototype.createTiles=function(path){if(typeof path=="undefined")path=[];var pathc=path.concat();var tl=this.newTile(pathc);if(tl.outsideImage)return;var ln=path.length;var d=this.depth;if(ln<d){path.push(0);this.createTiles(path);path.pop();path.push(1);this.createTiles(path);path.pop();path.push(2);this.createTiles(path);path.pop();path.push(3);this.createTiles(path);path.pop();}}
lib.toFullsizeJpeg=function(im){var fln=im.filename;var sp=fln.split(".");var wext=sp.slice(0,-1);wext.push("jpg");var jfln=wext.join(".");var cmd="convert "+fln+"[1] "+jfln;system.stdout(cmd);lib.system(cmd);return cmd;}
lib.toScaledJpeg=function(im,dstnm){var fln=im.filename;var xt=im.extent;var sc=700/xt.x;var scp=Math.floor(sc*100);var dstfl="/var/www/imagediver.com/nottiled/"+dstnm+".jpg";var cmd="convert "+fln+" -resize "+scp+"% "+dstfl;system.stdout(cmd);lib.system(cmd);return cmd;}})();
(function(){var lib=exports.IMAGE;if(!lib){exports.IMAGE={};lib=exports.IMAGE;}
var geom=exports.GEOM2D;var util=idv.util;
lib.Overlay=function(name,geometry){this.geometry=geometry; this.name=name;} 
lib.Viewport=function(canvas,tiling,extent,ovCanvas){var dcanvas=canvas[0];this.canvas=canvas;this.context=dcanvas.getContext('2d');var ctx=this.context;ctx.strokeStyle="#ff0000";if(ovCanvas){var dovCanvas=ovCanvas[0];this.ovCanvas=ovCanvas;this.ovContext=dovCanvas.getContext('2d');}
this.showTileBoundaries=false; this.tiling=tiling;this.extent=extent; this.rect=new geom.Rect(new geom.Point(0,0),extent);this.aspectRatio=extent.y/extent.x;this.depthBias=0;this.zoom=1;this.zoomDelay=500;this.scale=1.0; this.maxDepth=6;this.defAreaMode=0;this.depthOffset=0; this.pan=new geom.Point(0,0);var im=tiling.image;var imextent=im.extent;this.imExtent=imextent;this.imCenter=imextent.times(0.5); this.noZoomScaling=(extent.x)/(imextent.x);this.overlays={}
this.tilesDrawn=[]
this.idsOfTilesDrawn=[]; this.beingLoaded=[];this.zoomCallbacks=[];this.panCallbacks=[];return;} 
lib.Viewport.prototype.viewportToCanvas=function(x){ var scale=this.scale;return x.times(scale);}
lib.Viewport.prototype.canvasToViewport=function(x){ var invscale=1/(this.scale);return x.times(invscale);}
lib.Viewport.prototype.rectCanvasToViewport=function(r){var invscale=1/(this.scale);return r.times(invscale);}
lib.Viewport.prototype.pointViewportToImage=function(p){var zoom=this.zoom; var scaling=1/((this.noZoomScaling)*zoom);var vext=this.extent;var vcenter=vext.times(0.5);var vrel=p.minus(vcenter); var irel=vrel.times(scaling); var panDist=this.pan.times(this.imExtent.x); var imCenter=this.imCenter;var viewCenter=this.imCenter.plus(panDist); var rs=viewCenter.plus(irel);util.log("toim",p.x,p.y,rs.x,rs.y);return rs;}
lib.Viewport.prototype.pointImageToViewport=function(p){var panDist=this.pan.times(this.imExtent.x); var viewCenter=this.imCenter.plus(panDist); var relim=p.minus(viewCenter); var scaling=(this.noZoomScaling)*(this.zoom);var relvp=relim.times(scaling); var vext=this.extent;var vcenter=vext.times(0.5); var rs=vcenter.plus(relvp);util.log("tovp",p.x,p.y,rs.x,rs.y);return rs;}
lib.Viewport.prototype.rectViewportToImage=function(r){var thisHere=this;var f=function(p){return thisHere.pointViewportToImage(p);}
return r.applyPointOperation(f);}
lib.Viewport.prototype.rectCanvasToImage=function(r){var vp=this.rectCanvasToViewport(r);return this.rectViewportToImage(vp);}
lib.Viewport.prototype.rectImageToViewport=function(r){var thisHere=this;var f=function(p){return thisHere.pointImageToViewport(p);}
return r.applyPointOperation(f);}
lib.Viewport.prototype.rectImageToCanvas=function(r){var vp=this.rectImageToViewport(r);return this.viewportToCanvas(vp);}
lib.Viewport.prototype.computeCoverage=function(){return this.rectViewportToImage(this.rect);} 
lib.Viewport.prototype.coverage=function(){if(this.cachedCoverage&&!lib.checking)return this.cachedCoverage;var tl=this.tiling;var im=tl.image;var zm=this.zoom;if(!zm)return null;var rs=this.computeCoverage();this.cachedCoverage=rs;return rs;}
lib.Viewport.prototype.coverageToPanZoom=function(coverage){if(!coverage){coverage=this.coverage();}
var covCenter=coverage.center();var offset=covCenter.minus(this.imCenter);var pan=offset.divideBy(this.imExtent.x); var im=this.tiling.image;var zmx=(im.extent.x)/(coverage.extent.x);var zmht=(coverage.extent.x)*this.aspectRatio; var cvy=coverage.extent.y;if(zmht<cvy){ zm=zmx*(zmht/cvy);}else{zm=zmx;}
var cpan=this.pan;var czoom=this.zoom; return{zoom:zm,pan:pan}}
lib.Viewport.prototype.clearBeenDrawn=function(){util.log("beenDrawn","CLEAR");var td=this.tilesDrawn;var ln=td.length;for(var i=0;i<ln;i++){td[i].beenDrawn=false}
this.tilesDrawn=[]
this.idsOfTilesDrawn=[]}
lib.Viewport.prototype.assertTileDrawn=function(tile){tile.beenDrawn=true;this.tilesDrawn.push(tile);this.idsOfTilesDrawn.push("r"+tile.path.join(""))}
lib.Viewport.prototype.addOverlay=function(o){var nm=o.name;this.overlays[nm]=o;}
lib.Viewport.prototype.clearOverlays=function(o){this.overlays=[];this.clearOverlay();}
lib.Viewport.prototype.normalizedCanvasToImageCoords=function(np){ var cv=this.coverage(); var cvc=cv.corner;var cvxt=cv.extent;var imx=cvc.x+(np.x*cvxt.x);var imy=cvc.y+(np.y*cvxt.y);return new geom.Point(imx,imy);}
lib.Viewport.prototype.refresh=function(){if(typeof this.zoom=="undefined")this.zoom=this.initialZoom;this.setZoom(this.zoom);}
lib.relCanvas=function(div,e){var ofs=div.offset();var x=e.clientX-ofs.left;var y=e.clientY-ofs.top;var px=e.pageX-ofs.left;var py=e.pageY-ofs.top;util.log("drag",ofs.left,ofs.top,x,px,y,py);return new geom.Point(px,py);} 
lib.PanControl=function(div,vp,callbacks){ thisHere=this;this.div=div;this.vp=vp;if(typeof callback=="undefined"){this.callbacks=[];}else{this.callbacks=callbacks;} 
function relCanvas(e){var ofs=div.offset();var x=e.clientX-ofs.left;var y=e.clientY-ofs.top;var px=e.pageX-ofs.left;var py=e.pageY-ofs.top;util.log("drag",ofs.left,ofs.top,x,px,y,py);return new geom.Point(px,py);}
function relViewport(e){var rc=relCanvas(e);return rc.divideBy(vp.scale);}
function mouseMoveHandler(e){e.preventDefault();util.log("mouse","move");var cp=relViewport(e);var df=cp.minus(thisHere.mouseRef);if(vp.defAreaMode){if(thisHere.mouseIsDown){vp.clearOverlay();var r=new geom.Rect(thisHere.mouseRef,df);thisHere.selectedArea=r;util.log("drag",r.corner.x,r.corner.y,df.x,df.y);vp.drawRect(r,"viewport","red");return;}}
var nrp=df.divideBy(vp.extent.x); var np=cp.divideBy(vp.extent); var imc=vp.normalizedCanvasToImageCoords(np);var cv=vp.coverage(); var cvc=cv.corner;var cvxt=cv.extent;var imx=cvc.x+(np.x*cvxt.x);var imy=cvc.y+(np.y*cvxt.y);util.log("mouse",imc.x,imc.y);if(thisHere.mouseIsDown){var newpan=thisHere.panRef.minus(nrp.divideBy(vp.zoom));vp.setPan(newpan);var callbacks=this.callbacks;if(callbacks){var ln=callbacks.length;for(var i=0;i<ln;i++){var cb=callbacks[i];cb(newpan);}}}}
div.mousemove(mouseMoveHandler);div.mousedown(function(e){e.preventDefault(); var ps=relViewport(e);var ips=vp.pointViewportToImage(ps);var bps=vp.pointImageToViewport(ips);thisHere.mouseRef=ps;thisHere.panRef=vp.pan;util.log("mouse","down");thisHere.mouseIsDown=1;});div.mouseout(function(e){util.log("mouse","out");if(vp.defAreaMode&&thisHere.mouseIsDown){var cb=vp.areaDefinedCallback;if(cb){cb(vp.rectViewportToImage(thisHere.selectedArea));}}
thisHere.mouseIsDown=0;});div.mouseup(function(e){util.log("mouse","up");if(vp.defAreaMode&&thisHere.mouseIsDown){var cb=vp.areaDefinedCallback;if(cb){cb(vp.rectViewportToImage(thisHere.selectedArea));}}
thisHere.mouseIsDown=0;});}
lib.checking=false; 
lib.Viewport.prototype.maxYpan=function(){var tl=this.tiling;var im=tl.image;var zm=this.zoom;if(typeof zm=="undefined")return 0;var imExtent=this.imExtent;var imCenter=this.imCenter;var coverageXextent=imExtent.x*(1/zm);var vext=this.extent;var coverageYextent=coverageXextent*(vext.y/vext.x);util.log("setZoom","covYext",coverageYextent,imExtent.x);if(coverageYextent>=imExtent.y)return 0;return Math.abs((0.5*coverageYextent-imCenter.y)/(imExtent.x));}
lib.Viewport.prototype.maxXpan=function(windowMode){var tl=this.tiling;var im=tl.image;var zm=this.zoom;if(typeof zm=="undefined")return 0;var imExtent=this.imExtent;var imCenter=this.imCenter;var coverageXextent=imExtent.x*(1/zm);var vext=this.extent; return Math.abs((0.5*coverageXextent-imCenter.x)/(imExtent.x+(windowMode?2100:0)));}
lib.toBase2=function(n,d){var rs=[];var cv=n;while(cv>0){var cd=cv%2;rs.push(cv%2);cv=Math.floor(cv/2);} 
if(d){var ln=rs.length;for(var i=ln;i<d;i++){rs.push(0);}}
return rs.reverse();}
lib.Tiling.toTileId=function(xv,yv,d){ var xb2=lib.toBase2(xv,d);var yb2=lib.toBase2(yv,d);var id="r";for(var i=0;i<d;i++){var xd=xb2[i];var yd=yb2[i];if(xd){if(yd){var cpe="3";}else{cpe="1";}}else{if(yd){cpe="2";}else{cpe="0";}}
id+=cpe;}
return id;}
lib.Tiling.prototype.withinTile=function(p,d){var ar=this.aspectRatio;var tts=this.topTileSize;var x=p.x;var y=p.y;var tileDim=tts/Math.pow(2,d);var xindex=Math.floor(x/tileDim);var yindex=Math.floor(y/(tileDim));return lib.Tiling.toTileId(xindex,yindex,d);}
lib.debug=false;lib.Tiling.prototype.coveringTiles=function(r,d){ if(lib.debug)debugger;var ar=this.aspectRatio;var tts=this.topTileSize;var p=r.corner;var xt=r.extent;var q=p.plus(xt);var px=p.x;var py=p.y;var qx=q.x;var qy=q.y;var tileDim=tts/Math.pow(2,d);var pxindex=Math.max(Math.floor(px/tileDim),0);var pyindex=Math.max(Math.floor(py/(tileDim)),0);var qxindex=Math.max(Math.floor(qx/tileDim),0);var qyindex=Math.max(Math.floor(qy/(tileDim)),0);var rs=[];for(var i=pxindex;i<=qxindex;i++){for(var j=pyindex;j<=qyindex;j++){rs.push(lib.Tiling.toTileId(i,j,d));}}
util.log("coveringTiles",rs);return rs;}
lib.Viewport.prototype.clear=function(){var ctx=this.context;var xt=this.extent.times(this.scale);ctx.clearRect(0,0,xt.x,xt.y);var octx=this.ovContext;if(octx){octx.clearRect(0,0,xt.x,xt.y);}
this.clearBeenDrawn();}
lib.Viewport.prototype.clearOverlay=function(){var ctx=this.context;var xt=this.extent.times(this.scale);var octx=this.ovContext;if(octx){octx.clearRect(0,0,xt.x,xt.y);}}
lib.Viewport.prototype.drawTileImage=function(tile,trycount,behind){var vc=tile.whereToDraw.corner.times(this.scale);var ve=tile.whereToDraw.extent.times(this.scale);var im=tile.image;var ctx=this.context;var ee;var trycountv=trycount?trycount:1;pln=tile.path.length;util.log("draw",this.depth,pln,this.scale,this.zoom,trycountv,tile.id,vc.x,vc.y,ve.x,ve.y);var thisHere=this;try{if(behind)ctx.globalCompositeOperation="destination-over";ctx.drawImage(im,vc.x,vc.y,ve.x,ve.y);if(behind)ctx.globalCompositeOperation="source-over";this.assertTileDrawn(tile);var pln=tile.path.length;if(this.showTileBoundaries){if((pln%2)==0)ctx.strokeStyle="red";else ctx.strokeStyle="green";ctx.strokeRect(vc.x,vc.y,ve.x,ve.y);}}catch(e){ee=e;util.log("drawfail",tile.path);if(trycountv<1){setTimeout(function(){thisHere.drawTileImage(tile,trycountv+1,behind);},200);}}}
lib.Viewport.prototype.canvasToImageCoords=function(p){}
lib.Viewport.prototype.drawRect=function(ir,coordSystem,color){if(coordSystem=="image"){var r=this.rectImageToCanvas(ir);}else if(coordSystem=="viewport"){r=this.viewportToCanvas(ir);}else{r=ir;}
var ctx=this.ovContext;ctx.save();ctx.strokeStyle=color
corner=r.corner;extent=r.extent;ctx.strokeRect(corner.x,corner.y,extent.x,extent.y);ctx.restore();}
lib.Viewport.prototype.drawOverlays=function(){var os=this.overlays;for(var i in os){var o=os[i];var g=o.geometry;this.drawRect(g,"image","red");}
}
lib.Viewport.prototype.drawTile=function(tile,behind){var tileDepth=tile.path.length;util.log("draw","mightDraw ",tile.path.join(""));if(tile.outsideImage){util.log("draw","did not draw because outside ",tile.path.join(""));return;}
if(tile.beenDrawn){util.log("beenDrawn","been drawn",tile.path.join(""));util.log("draw","did not draw because been drawn ",tile.path.join(""));return;}
util.log("beenDrawnn","drawing",tile.path.join(""));var coverage=this.coverage();
var tiling=this.tiling;var ar=tiling.aspectRatio;var timsz=tiling.tileImageSize;var zoom=this.zoom;var scaling=(this.noZoomScaling)*zoom;var tileCorner=tile.corner;var coverageCorner=coverage.corner;var vcorner=tileCorner.minus(coverageCorner).times(scaling); var cv=tile.coverage;var vwidth=(cv.x)*scaling+1; var vheight=(cv.y)*scaling+1;var vextent=new geom.Point(vwidth,vheight);tile.whereToDraw=new geom.Rect(vcorner,vextent);var im=tile.image;var thisHere=this;if(im){this.drawTileImage(tile,null,behind);}else{ var ptile=tile.parent();while(ptile){var pim=ptile.image;if(pim&&!ptile.loadingImage){util.log("parent",tile.path,ptile.path)
this.drawTile(ptile,true);break;}else{ptile=ptile.parent();}}
if(tile.loadingImage)return; tile.loadingImage=1;var im=document.createElement('img');var imsrc=tiling.url+(tile.id)+".jpg"; util.log("imsrc",imsrc);var imjq=$(im);imjq.css({left:0,top:0,"z-index":100*tileDepth,position:"absolute"});thisHere.beingLoaded.push(tile.path.join("")); imjq.load(function(){tile.image=im;tile.loadingImage=false;util.log("loaded",tile.path.join(""));if(thisHere.depth+thisHere.depthOffset==tile.path.length){ thisHere.drawTile(tile);} 
var bld=thisHere.beingLoaded;var bln=bld.length;var nbld=[];var mid=tile.path.join("");for(var i=0;i<bln;i++){var cid=bld[i];if(cid!=mid){nbld.push(cid);}}
thisHere.beingLoaded=nbld;});imjq.attr("src",imsrc);$(".imageHolder").append(imjq);}}
lib.Viewport.prototype.coveringTiles=function(d){var coverage=this.coverage();if(!coverage)return[];var tiling=this.tiling;return tiling.coveringTiles(coverage,d);}
lib.Viewport.prototype.drawTiles=function(d){this.clear();var tileids=this.coveringTiles(d);var byId=this.tiling.tilesById;var ln=tileids.length;for(var i=0;i<ln;i++){var tlid=tileids[i];var tl=byId[tlid];if(tl){this.drawTile(tl);}}}
lib.Viewport.prototype.setPan=function(ip,skipCallbacks){ util.log("setPan","pan",ip.x,ip.y,"maxypan",this.cmaxYpan,"zoom",this.zoom,"depth",this.depth);var lp=this.limitPan(ip);if(lp!=null){this.limitedPan=lp;p=lp;}
var cv=this.coverage();var cvxt=cv.extent;var cvc=cv.corner;var imxt=this.imExtent;var bottomCv=cvc.y+cvxt.y; this.pan=p;this.cachedCoverage=null;this.drawTiles(this.depth+this.depthOffset);this.drawOverlays();var pcbs=this.panCallbacks;if(!skipCallbacks&&(typeof pcbs!="undefined")){var ln=pcbs.length;for(var i=0;i<ln;i++){var cb=pcbs[i];cb(p);}}}
lib.Viewport.prototype.setZoom=function(z,dontDraw,dontCallTheCallback){ util.log("setZoom",z);this.zoom=z;this.cmaxYpan=this.maxYpan();this.cmaxXpan=this.maxXpan();this.cmaxXpanWindow=this.maxXpan(window);util.log("setZoom","panLimit",this.cmaxXpan,this.cmaxYpan);var lp=this.limitPan(this.pan);if(lp){this.pan=lp;}
var nd=Math.floor(Math.log(z)/Math.LN2+this.depthBump+this.depthBias);nd=Math.min(this.maxDepth,nd);if(nd!=this.depth){util.log("depth",nd,this.maxDepth);this.depth=nd;}
this.cachedCoverage=null;if(!dontDraw){this.drawTiles(this.depth+this.depthOffset);this.drawOverlays();}
if(dontCallTheCallback)return;var zc=this.zoomCallbacks;var ln=zc.length;for(var i=0;i<ln;i++){var tzc=zc[i];tzc(z,dontDraw);}}
lib.Viewport.prototype.limitPan=function(p){if(!p)return null;if(typeof this.zoom=="undefined")return null;var py=p.y;py=Math.min(py,this.cmaxYpan);py=Math.max(py,-this.cmaxYpan);var px=p.x;px=Math.min(px,this.cmaxXpan);px=Math.max(px,-this.cmaxXpan);util.log("limitPan",p.x,px,p.y,py);return new geom.Point(px,py);}
lib.Viewport.prototype.setPanZoom=function(p,z){ this.setZoom(z,true);this.setPan(p);}
lib.Viewport.prototype.setCoverage=function(cov){var pz=this.coverageToPanZoom(cov);this.setPanZoom(pz.pan,pz.zoom);}
lib.TitleBar=function(container,title,includeAbout,includeGallery){this.container=container;this.title=title;this.includeAbout=includeAbout;this.includeGallery=includeGallery;}
lib.TitleBar.prototype.render=function(){var cnt=this.container;var logo=$('<span class="logo">imageDiver</span>');cnt.append(logo);logo.click(function(){location.href="/";});var titleEl=$('<span class="titleSpan">'+this.title+'</span>');cnt.append(titleEl);if(this.includeAbout){var about=$('<span class="titleRight">about</span>');cnt.append(about);about.click(function(){location.href="/about";});}
if(this.includeGallery){var gallery=$('<span class="titleRight">gallery</span>');cnt.append(gallery);gallery.click(function(){location.href="/gallery";});}
if(0&&idv.loggedInUser){ var logOut=$('<div style="position:absolute;right:5px;top:0px" class="smallClickableElement">log out</span>');cnt.append(logOut);}
}
lib.genTitleBar=function(title,includeAbout,includeGallery){var b=$('body');titleDiv=$('<div class="titleDiv"/>');b.append(titleDiv);lib.titleBar=new lib.TitleBar(titleDiv,title,includeAbout,includeGallery);lib.titleBar.render();return titleDiv;}
lib.DualControl=function(vp0,vp1){this.vp0=vp0; this.vp1=vp1;var thisHere=this;function vp1SetPan(p){vp1.setPan(thisHere.pan0topan1(p),true);}
this.vp0.panCallbacks.push(vp1SetPan);function vp0SetPan(p){var p0p=thisHere.pan1topan0(p);vp0.setPan(p0p,true);}
this.vp1.panCallbacks.push(vp0SetPan);function vp1SetZoom(z,dontDraw){util.log("dual"," control1 zoom to "+z);vp1.setZoom(z,dontDraw,true);}
this.vp0.zoomCallbacks.push(vp1SetZoom);}
lib.DualControl.prototype.pan0topan1=function(p){var po=p.plus(this.panOffset);util.log("adjustment","offsetonly",po.x);var px=po.x;var py=po.y;var pxg=this.panxGrid; var adx=pxg.valueAt(px); util.log("adjustment",px,adx);var spx=(px+adx)/(this.spanFactor); var rs=new geom.Point(spx,py);util.log("pastPan",p.x,rs.x);return rs;}
lib.DualControl.prototype.pan1topan0=function(p){var po=p.minus(this.panOffset);util.log("adjustment","offsetonly",po.x);var px=po.x;var py=po.y;var pxg=this.panxGrid; var adx=pxg.valueAt(px); util.log("adjustment",px,adx);var spx=(px-adx)*(this.spanFactor); var rs=new geom.Point(spx,py);util.log("presentPan",p.x,rs.x);return rs;}
lib.genCanvas=function(options){var container=options.container;var extent=options.extent;var zIndex=options.zIndex;var bcolor=options.backgroundColor;if(!bcolor)bcolor="#000000"
var icanvasE=document.createElement('canvas');icanvasE.setAttribute("width",extent.x);icanvasE.setAttribute("height",extent.y);icanvas=$(icanvasE);theCanvas=icanvas;icanvas.css("position","absolute");icanvas.css("opacity",1); var corner=options.corner;icanvas.css("background-color",bcolor);icanvas.css("z-index",zIndex);container.append(icanvas);if(corner){icanvas.css({top:corner.y,left:corner.x});}else{icanvas.css({top:0,left:0});}
return icanvas;}})();
idv.common={};(function(){var lib=idv.common;lib.genLogo=function(){var rs=$('<div class="logo"/>');var left=$('<span class="logoLeft">image</div>');var right=$('<span class="logoRight">Diver</div>');rs.append(left);rs.append(right);return rs;}
lib.genTable=function(rows){var st='<table>';var ln=rows.length;for(var i=0;i<ln;i++){st+='<tr>';var cr=rows[i];var rln=cr.length;for(var j=0;j<rln;j++){var cc=cr[j];st+='<td>'+cc+'</td>';}
st+='</tr>';}
st+='</table>';return $(st);}
lib.loadImages=function(ims){var ln=ims.length;for(var i=0;i<ln;i++){var ci=ims[i];var imel=$('<img>');imel.attr("src",ci);}}
lib.Lightbox=function(container,rect){this.container=container;var xt=rect.extent;var cr=rect.corner;this.left=cr.x;this.top=cr.y;this.width=xt.x;this.height=xt.y;}
lib.Lightbox.prototype.setElementProperties=function(){var element=this.element;element.css({width:(this.width+"px"),height:(this.height+"px"),top:(this.top+"px"),left:(this.left+"px")});}
lib.Lightbox.prototype.dismiss=function(){this.element.hide();this.shade.hide();this.loading.hide();}
lib.Lightbox.prototype.pop=function(){this.setElementProperties();var wd=$(document).width();var ht=$(document).height();var w=$(window);var stop=w.scrollTop();var bht=w.height();var bwd=w.width();var lwd=this.width;var lft=Math.max((bwd-lwd)/2,50);var eht=Math.max(bht-(this.top)-50,50);this.element.css({width:lwd+"px",height:(eht+"px"),top:(stop+35)+"px",left:(lft+"px")});this.loading.css({top:stop+10});this.element.show();this.addClose();this.shade.css({width:(wd+"px"),height:(ht+"px"),top:"0px",left:"0px"});this.shade.show();}
lib.Lightbox.prototype.setHtml=function(html){var e=this.element;e.empty();this.addClose(e);var cn=$('<div class="lightboxContent"/>');e.append(cn);cn.html(html);}
lib.Lightbox.prototype.loadUrl=function(url){var e=this.element;this.loading.show();e.empty();this.addClose(e);var wd=this.width-25;var ifrs='<iframe class="lightboxiframe" src="'+url+'" frameborder="0" width="'+wd+'" height="100%"/>';var ifr=$(ifrs);var thisHere=this;ifr.load(function(){thisHere.loading.hide();});e.append(ifr);}
lib.Lightbox.prototype.afterClose=function(){if(this.afterCloseCallback){this.afterCloseCallback();}}
lib.Lightbox.prototype.addClose=function(){var thisHere=this;this.close=$('<div style="padding:3px;cursor:pointer;background-color:red;font-weight:bold;border:thin solid white;font-size:12pt;color:white;float:right">X</div>');this.close.click(function(){thisHere.element.empty();thisHere.dismiss();thisHere.afterClose();});this.element.append(this.close);}
lib.Lightbox.prototype.render=function(){var thisHere=this;var loading=$('<div class="loading">Loading...</div>');this.loading=loading;this.container.append(loading);loading.hide();var element=$('<div class="lightbox"/>');var wd=$(document).width();var ht=$(document).height();var shades='<div style="position:absolute;top:0px;left:0px;width:'+wd+'px;height:'+ht+'px;z-index:1500;opacity:0.8;background-color:black;"/>';var shade=$(shades);this.element=element;this.shade=shade;this.setElementProperties();this.container.append(element);this.container.append(shade);this.dismiss();}
lib.setRect=function(el,rect,canvas,ocanvas,noHeight){var c=rect.corner;var ex=rect.extent;var css={left:(c.x)+"px",top:(c.y)+"px",width:(ex.x)+"px"};if(!noHeight)css.height=(ex.y)+"px";el.css(css);if(canvas){canvas.attr("width",rect.extent.x);canvas.attr("height",rect.extent.y);}
if(ocanvas){ocanvas.attr("width",rect.extent.x);ocanvas.attr("height",rect.extent.y);}}})();
(function(){var lib=idv;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var util=idv.util; lib.zoomSlider=function(options){container=options.container;this.container=container;this.getZoom=options.getZoom;this.zoomFactor=options.zoomFactor;this.zoomIncrement=options.zoomIncrement;this.zoomDelay=options.zoomDelay;var marginX=5;var marginY=4;var ht=26;var midy=ht/2;var barWidth=100;this.barWidth=barWidth;var barLeft=marginX+ht;var smallSep=3;var totalWidth=ht*2+marginX+barWidth+smallSep;this.totalWidth=totalWidth;var zoomerContainer=$('<div/>');zoomerContainer.css({"left":0,"top":marginY,"width":totalWidth,"height":ht,"position":"absolute","background-color":"#444444"});container.append(zoomerContainer);var circleExtent=new geom.Point(ht,ht);var corner=new geom.Point(marginX,0);var minusCanvas=imlib.genCanvas({corner:corner,container:zoomerContainer,extent:circleExtent,backgroundColor:"#444444"});var ctx=minusCanvas.context.getContext('2d');ctx.strokeStyle='rgb(255,255,255)';var linewidth=1.5;ctx.lineWidth=linewidth;var radius=10;var leftPadding=0;ctx.beginPath();var centerx=radius+linewidth+leftPadding
ctx.arc(centerx,midy,radius,0,2*Math.PI,false);ctx.stroke();ctx.beginPath();var xDim=10;ctx.moveTo(centerx-xDim/2,midy);ctx.lineTo(centerx+xDim/2,midy);ctx.stroke();var barWidth=100;var extent=new geom.Point(barWidth,ht);var barLeft=marginX+ht;corner=new geom.Point(barLeft,0);var barCanvas=imlib.genCanvas({"z-index":100,container:zoomerContainer,corner:corner,extent:extent,backgroundColor:"#444444"});var ctx=barCanvas.context.getContext('2d');ctx.strokeStyle='rgb(255,255,255)';ctx.lineWidth=linewidth;ctx.beginPath();ctx.moveTo(0,midy);ctx.lineTo(barWidth,midy);ctx.stroke();var marker=$('<div class="zoomMarker"/>');this.marker=marker;var markerWidth=3;var markerHeight=ht-6;var markerTop=3;this.markerTop=markerTop;marker.css({"background-color":"white",position:"absolute","top":markerTop,"left":barLeft,"width":markerWidth,"height":markerHeight});zoomerContainer.append(marker);var corner=new geom.Point(marginX+ht+barWidth+smallSep,0);var plusCanvas=imlib.genCanvas({corner:corner,container:zoomerContainer,extent:circleExtent,backgroundColor:"#444444"});var ctx=plusCanvas.context.getContext('2d');ctx.strokeStyle='rgb(255,255,255)';ctx.lineWidth=linewidth;ctx.beginPath();ctx.arc(centerx,midy,radius,0,2*Math.PI,false);ctx.stroke();ctx.beginPath();ctx.moveTo(centerx-xDim/2,midy);ctx.lineTo(centerx+xDim/2,midy);ctx.moveTo(centerx,midy-xDim/2);ctx.lineTo(centerx,midy+xDim/2);ctx.stroke(); var mouseIsDown=false;var mouseInMarker=false;marker.mouseenter(function(){util.log("slider","enter marker");mouseInMarker=true;});marker.mouseleave(function(){util.log("slider","leave marker");mouseInMarker=false;});var markerMaxX=barLeft+barWidth;this.markerMaxX=markerMaxX;this.markerMinX=barLeft;this.markerTop=markerTop;var maxZoom=options.maxZoom;this.maxZoom=maxZoom;var setZoom=options.setZoom;this.setZoom=setZoom;function sliderAction(p){var x=p.x+barLeft;if(x>markerMaxX)return;if(x<barLeft)return;var nx=(x-barLeft)/barWidth;marker.css({top:markerTop,left:x});var logMaxZoom=Math.log(maxZoom);var ex=nx*logMaxZoom;var newZoom=Math.pow(Math.E,ex);setZoom(newZoom);}
zoomerContainer.mousedown(function(e){e.preventDefault();var rc=imlib.relCanvas(barCanvas,e);mouseIsDown=true;sliderAction(rc);});zoomerContainer.mousemove(function(e){e.preventDefault();if(mouseIsDown){var rc=imlib.relCanvas(barCanvas,e);sliderAction(rc);}});zoomerContainer.mouseup(function(e){mouseIsDown=false;});zoomerContainer.mouseleave(function(e){mouseIsDown=false;});var thisHere=this;plusCanvas.mousedown(function(e){thisHere.startZoomingIn();});plusCanvas.mouseup(function(e){thisHere.stopZooming();});plusCanvas.mouseleave(function(e){thisHere.stopZooming();});minusCanvas.mousedown(function(e){thisHere.startZoomingOut();});minusCanvas.mouseup(function(e){thisHere.stopZooming();});minusCanvas.mouseleave(function(e){thisHere.stopZooming();});this.zoomin=plusCanvas;this.zoomout=minusCanvas;this.bar=barCanvas;} 
lib.zoomSlider.prototype.fromNormalizedZoom=function(nx){var logMaxZoom=Math.log(this.maxZoom);var ex=nx*logMaxZoom;return Math.pow(Math.E,ex);}
lib.zoomSlider.prototype.toNormalizedZoom=function(zoom){var logMaxZoom=Math.log(this.maxZoom);var logZoom=Math.log(zoom);return logZoom/logMaxZoom;}
lib.zoomSlider.prototype.positionSlider=function(v){var x=this.markerMinX+v*this.barWidth;this.marker.css({top:this.markerTop,left:x});}
lib.zoomSlider.prototype.positionSliderFromZoom=function(z){this.positionSlider(this.toNormalizedZoom(z));}
lib.zoomSlider.prototype.zoomer=function(){util.log("zoomer","zoomer",this.zoomDelay);var z=this.getZoom();var zin=this.zoomingIn;var zout=this.zoomingOut;var thisHere=this;var zoomFactor=this.zoomFactor;if(zin||zout){if(zin){var nz=z*this.zoomIncrement;}else{var nz=z/this.zoomIncrement;}
if((1<=nz)&&(nz<=this.maxZoom)){var dt=new Date();var ctm=dt.getTime();this.setZoom(nz);dt=new Date();var etm=dt.getTime()-ctm;util.log("zoomer",Math.floor(etm));setTimeout(function(){thisHere.zoomer()},this.zoomDelay);}else{this.zoomingIn=false;this.zoomingOut=false;}}}
lib.zoomSlider.prototype.startZoomingIn=function(){this.zoomingOut=false;this.zoomingIn=true;this.zoomer();}
lib.zoomSlider.prototype.stopZooming=function(){this.zoomingIn=false;this.zoomingOut=false;}
lib.zoomSlider.prototype.startZoomingOut=function(){this.zoomingOut=true;this.zoomingIn=false;this.zoomer();}})();
var page={};(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util; 
lib.divStack=function(margin,minScale,unscaledWidth){this.divs=[];this.margin=margin;this.minScale=minScale;this.unscaledWidth=unscaledWidth;}
lib.divStack.prototype.addDiv=function(div){this.divs.push(div);div.stack=this;}
lib.scalableDiv=function(options){ $.extend(this,options);}
lib.scalableDiv.prototype.rect=function(unscaled){if(this.scalable&&!unscaled){var scale=this.stack.scale;}else{scale=1;}
var wd=this.stack.unscaledWidth*scale;var ht=this.height*scale;return new geom.Rect(new geom.Point(this.stack.left,this.top),new geom.Point(wd,ht));}
lib.divStack.prototype.unscalableHeight=function(){var rs=0;var divs=this.divs;var ln=divs.length;for(var i=0;i<ln;i++){var div=divs[i];if(!div.scalable){rs+=div.height;}}
return rs;}
lib.divStack.prototype.scalableHeight=function(){var rs=0;var divs=this.divs;var ln=divs.length;for(var i=0;i<ln;i++){var div=divs[i];if(div.scalable){rs+=div.height;}}
return rs;}
lib.divStack.prototype.computeScale=function(){var ww=$(window).width();var margin=this.margin;var uswd=this.unscaledWidth;var wscale=(ww-2*margin)/uswd; var wht=$(window).height();var scHt=this.scalableHeight();var uscHt=this.unscalableHeight();var hscale=(wht-uscHt)/scHt;this.scale=Math.max(Math.min(wscale,hscale),this.minScale);if(this.maxScale){this.scale=Math.min(this.scale,this.maxScale);}
lib.scale=this.scale;}
lib.divStack.prototype.placeDivs=function(){this.computeScale();var ww=$(window).width();var winCenter=ww/2;var scale=this.scale;var divWd=this.unscaledWidth*scale;var divLeft=winCenter-0.5*divWd;this.left=divLeft;var top=0;var divs=this.divs;var ln=divs.length;util.log("layout","scale",scale,"left",divLeft,"width",divWd);for(var i=0;i<ln;i++){var div=divs[i];div.top=top;if(div.scalable){var divHt=scale*div.height;}else{divHt=div.height;}
var el=div.element;if(div.name=="vp1")util.log("layout",div.name,"top",top,"height",divHt);if(el){el.css({top:top,left:divLeft,width:divWd,height:divHt});if(div.afterPlacement){div.afterPlacement();}}
top+=divHt;}
if(this.includeLightbox){var lb=this.lightbox;var top=50;var lbwd=500;var lft=winCenter=0.5*lbwd;var wht=$(window).height();var lbht=wht-100;var lightboxRect=new geom.Rect(new geom.Point(lft,top),new geom.Point(lbwd,lbht));if(!lb){lb=new com.Lightbox($('body'),lightboxRect);lb.render();this.lightbox=lb;}}} 
lib.divStack.placeDivs=function(){var divs=this.divs;var ctop=0;var ln=divs.length;for(var i=0;i<ln;i++){var cdiv=divs[i];cdiv.place(ctop);ctop=ctop+cdiv.height;}}})();idv.util.activeConsoleTags=["adjustment"];
(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.setClickMethod=function(el,m,doNotEnable){el.click(function(e){e.preventDefault();var enabled=el.data("enabled");if(enabled){m();}});if(doNotEnable){el.data("enabled",false);}else{lib.enableClickable(el);}}
lib.disableClickable=function(el){el.removeClass("clickableElement");el.removeClass("clickableElementSelected");el.addClass("clickableElementDisabled")
el.data("enabled",false);}
lib.selectClickable=function(el){el.removeClass("clickableElementDisabled");el.removeClass("clickableElement");el.addClass("clickableElementSelected");el.data("enabled",false);}
lib.enableClickable=function(el){el.removeClass("clickableElementDisabled");el.removeClass("clickableElementSelected");el.addClass("clickableElement");el.data("enabled",true);}})();
(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.scaleDivForPanel=function(panel){util.log("scale",panel.name);if(panel.selfScaling)return;var scalable=panel.scalable;var iht=panel.height;if(iht){if(scalable){var ht=lib.scale*iht;}else{ht=iht;}}else{ht=null;}
lib.panelDiv.css("height",ht);} 
lib.selectPanel=function(panelName,initData){if(lib.currentPanel){lib.lastPanel=lib.currentPanel;}
if(typeof(panelName)!="string"){panelName=panelName.name;}
var selPanel=lib.panels[panelName];var selActv=selPanel.activator;for(var nm in lib.panels){var cpan=lib.panels[nm];var cpn=cpan.panel;var actv=cpan.activator;if(!cpn)continue;if(nm==panelName){if(actv){lib.selectClickable(actv);}
if(lib.vp){lib.vp.clearOverlays();}
cpn.show();lib.scaleDivForPanel(cpan);lib.currentPanel=cpan;var initializer=cpn.data("initializer");if(initializer){if(initData){initializer(initData);}else{initializer();}}}else{if(actv&&selActv){ lib.enableClickable(actv);}
cpn.hide();}}}
lib.setPanelPanel=function(name,panel){var pn=lib.panels[name];if(!pn){pn={panel:panel,name:name};lib.panels[name]=pn;return pn;}
pn.panel=panel;return pn;}
lib.setPanelActivator=function(name,activator){var pn=lib.panels[name];if(!pn){pn={activator:activator,name:name};lib.panels[name]=pn;return pn;}
pn.activator=activator;return pn;}
lib.hookupPanelActivator=function(name){var pnd=lib.panels[name];var actv=pnd.activator;if(pnd&&actv){lib.setClickMethod(actv,function(){lib.selectPanel(name);})
actv.mousedown(function(e){e.preventDefault();});}}
lib.hookupPanelActivators=function(){for(nm in lib.panels){lib.hookupPanelActivator(nm);}}
lib.pathLast=function(p){var sp=p.split("/");var ln=sp.length;return sp[ln-1];}
lib.setPanelDivHeight=function(ht){lib.panelDiv.css("height",ht);var ofs=lib.panelDiv.offset();var btop=ofs.top+ht;lib.bottomDiv.css("top",btop);}})();
(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.snapArrayDiv=$('<div id="snapArray">'+'<div id="snapArrayNoSnaps">No snapshots have been added to this album yet</div>'+'</div');lib.snapArrayDiv.data("initializer",function(){if(lib.snaps.length==0){$('#snapArrayNoSnaps').show();}else{$('#snapArrayNoSnaps').hide();lib.positionSnaps();}
});lib.thumbWidth=function(snapD){var xt=snapD.coverage.extent;var aspectRatio=xt.y/xt.x;var snapH=lib.snapThumbHeight;return snapH/aspectRatio;}
lib.thumbContainerWidth=function(snapD){var tw=lib.thumbWidth(snapD);var rs=tw+lib.snapThumbMargin*2;if(rs<lib.snapThumbMinWidth){rs=lib.snapThumbMinWidth;}
return rs;}
lib.snapWidth=function(snapD){var xt=snapD.coverage.extent;var aspectRatio=xt.y/xt.x;var snapH=lib.snapHeight;return snapH/aspectRatio;}
lib.setThumbCss=function(snap,left,top){var snapH=lib.snapThumbHeight;var snapCapHeight=lib.snapThumbCaptionHeight;var snapW=lib.thumbWidth(snap.snapD);var snapCW=lib.thumbContainerWidth(snap.snapD);var imleft=(snapCW-snapW)/2;var snapCH=snapH+10+snapCapHeight;var cnt=snap.container;var css={"border":"solid thin gray",left:left,top:top,width:snapCW,height:snapCH,position:"absolute"};cnt.css(css);var cse=snap.img;cse.css({left:imleft,top:5+snapCapHeight,width:snapW,height:snapH,position:"absolute"});}
lib.mouseenterSnap=function(snap){var vp=lib.vp;var snapD=snap.snapD;var cv=snapD.coverage;vp.drawRect(cv,"image","red");var cnt=snap.container;cnt.css({"background-color":"#dddddd"});var cap=snap.caption;cap.css({"color":"black"});}
lib.mouseleaveSnap=function(snap){lib.vp.clearOverlay();lib.vp.drawOverlays();var cnt=snap.container;cnt.css({"background-color":"black"});var cap=snap.caption;cap.css({"color":"white"});}
lib.positionSnaps=function(){var minHt=lib.scale*lib.standardPanelHeight;var wd=lib.snapArrayDiv.width();var snaps=lib.snaps;var ln=snaps.length;var gapX=lib.snapGapX;var gapY=lib.snapGapY;var snapH=lib.snapThumbHeight;var snapCapH=lib.snapCaptionHeight;var cx=gapX;var cy=gapY;for(var i=0;i<ln;i++){var cs=snaps[i];var snapW=lib.thumbContainerWidth(cs.snapD);nx=cx+snapW+gapX;if(nx>wd){ cx=gapX;nx=cx+snapW+gapX;cy=cy+snapH+gapY;}
lib.setThumbCss(cs,cx,cy);cx=nx;}
var sht=cy+snapH+gapY+20;var ht=Math.max(minHt,sht);lib.setPanelDivHeight(ht);}
lib.snaps=[];lib.snapDthumb=function(snapD){var tp=snapD.topic;var tps=tp.split("/");return"/snap/thumb/"+tps[2]+"/"+tps[3]+".jpg";}
lib.snapDfullsize=function(snapD){var tp=snapD.topic;var tps=tp.split("/");return"/snap/fullsize/"+tps[2]+"/"+tps[3]+".jpg";}
lib.snapDsByTopic={};lib.addSnap=function(snapD){snapD.coverage=geom.internalizeRect(snapD.coverage);var thumbc=$("<div class='thumbc'/>");var caption=$("<div class='thumbCaption'></div>");thumbc.append(caption);caption.html(snapD.caption);var imjq=$("<img class='thumb' />");thumbc.append(imjq);lib.snapArrayDiv.append(thumbc)
var imsrc=lib.snapDthumb(snapD);util.log("imsrc",imsrc);imjq.attr("src",imsrc);thumbc.click(function(){lib.vp.setZoom(1);lib.showSelectedSnap(snapD)});var esd={snapD:snapD,container:thumbc,img:imjq,caption:caption};thumbc.mouseenter(function(){lib.mouseenterSnap(esd)});thumbc.mouseleave(function(){lib.mouseleaveSnap(esd);});thumbc.mousedown(function(e){e.preventDefault();});lib.snaps.push(esd);var tp=snapD.topic;lib.snapDsByTopic[tp]=snapD;}
lib.addSnaps=function(){var ln=snapDs.length;for(var i=0;i<ln;i++){var sd=snapDs[i];sd.ordinal=i; lib.addSnap(sd);}
lib.positionSnaps();}
lib.addSnapArrayDiv=function(container){container.append(lib.snapArrayDiv);lib.setPanelPanel("snapArray",lib.snapArrayDiv);lib.snapArrayDiv.css({width:"100%",height:"100%"});}})();
(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.selectedSnaps={};
lib.snapCallback=function(data){var snapD=data.value;snapD.ordinal=lib.snaps.length;lib.addSnap(snapD);lib.showSelectedSnap(snapD);}
lib.editSnap=function(){var selsnap=lib.nowSelectedSnap;lib.selectPanel("createSnap",selsnap);}
lib.hideSelectedSnap=function(){lib.vp.clearOverlays();var selsnap=lib.nowSelectedSnap;if(selsnap.prevThumb){selsnap.prevThumb.hide();}
if(selsnap.nextThumb){selsnap.nextThumb.hide();}
lib.nowSelectedSnap.element.hide();}
lib.interpolateCoverage=function(startCov,destCov,v){if(v>=1)v=1;var covNow=startCov.interpolate(destCov,v);var covRect=geom.internalizeRect(covNow);lib.vp.setCoverage(covRect);lib.zSlider.positionSliderFromZoom(lib.vp.zoom);if(v<1){setTimeout(function(){lib.interpolateCoverage(startCov,destCov,v+0.1);},50);}}
lib.zoomToSnap=function(snapD,scale){if(!scale)scale=1.1;var cov=snapD.coverage;var scov=cov.scale(scale);var covRect=geom.internalizeRect(scov);lib.vp.setCoverage(covRect);lib.zSlider.positionSliderFromZoom(lib.vp.zoom);}
lib.animatedZoomToSnap=function(snapD,scale){var startCov=lib.vp.coverage();if(!scale)scale=1.1;var destCov=snapD.coverage.scale(scale);lib.interpolateCoverage(startCov,destCov,0);}
lib.zoomToSelectedSnap=function(){lib.vp.setZoom(1);lib.animatedZoomToSnap(lib.nowSelectedSnap.snapD,1.1);}
lib.positionsForSelectedSnapElements=function(snapC){var divW=lib.panelDiv.width();var snaps=lib.snaps;var snapD=snapC.snapD;var o=snapD.ordinal;var prevThumb=snapC.prevThumb;var prevNextWidth=75;var rs={};if(prevThumb){var prevSnapC=snaps[o-1];var prevSnapD=prevSnapC.snapD;var thumbH=lib.snapThumbHeight;var thumbW=lib.thumbWidth(prevSnapD);if(thumbW>prevNextWidth){thumbH=thumbH*prevNextWidth/thumbW;thumbW=prevNextWidth;}
var prevExtent=new geom.Point(thumbW,thumbH);var prevCorner=new geom.Point(10,lib.thumbTop);rs.prev=new geom.Rect(prevCorner,prevExtent);}
var nextThumb=snapC.nextThumb;var nextAreaWidth=0;if(nextThumb){var nextSnapC=snaps[o+1];var nextSnapD=nextSnapC.snapD;var thumbW=lib.thumbWidth(nextSnapD);var thumbH=lib.snapThumbHeight;var thumbW=lib.thumbWidth(nextSnapD);if(thumbW>prevNextWidth){thumbH=thumbH*prevNextWidth/thumbW;thumbW=prevNextWidth;}
var thumbLeft=divW-thumbW-30;var nextExtent=new geom.Point(thumbW,thumbH);var nextCorner=new geom.Point(thumbLeft,lib.thumbTop);rs.nxt=new geom.Rect(nextCorner,nextExtent);} 
var availWidthForSnap=divW-2*prevNextWidth-100;var snapW=lib.snapWidth(snapD);var snapH=lib.snapHeight;var snapDH=0;if(snapW>availWidthForSnap){var snapH=snapH*availWidthForSnap/snapW;var snapDH=lib.snapHeight-snapH; snapW=availWidthForSnap;}
var snapLeft=(0.5*(divW-snapW));var snapExtent=new geom.Point(snapW,snapH);var snapCorner=new geom.Point(snapLeft,lib.snapTop+0.5*snapDH);rs.snap=new geom.Rect(snapCorner,snapExtent);return rs;}
lib.rectToCss=function(r){var c=r.corner;var xt=r.extent;return{"positions":"absolute","left":c.x,"top":c.y,"width":xt.x,"height":xt.y}}
lib.positionPic=function(picElement,container,rect){var c=rect.corner;var xt=rect.extent;picElement.css({width:xt.x,height:xt.y});var css={position:"absolute","top":c.y,left:c.x,width:xt.x};container.css(css);picElement.show();}
lib.positionSelectedSnapElements=function(snapC){var positions=lib.positionsForSelectedSnapElements(snapC);var divW=lib.panelDiv.width();var snaps=lib.snaps;var snapD=snapC.snapD;var o=snapD.ordinal;var prevp=positions.prev;if(prevp){var prevThumb=snapC.prevThumb;lib.positionPic(prevThumb,$("#selectedSnapPrev"),prevp);}
var nextp=positions.nxt;if(nextp){var nextThumb=snapC.nextThumb;lib.positionPic(nextThumb,$("#selectedSnapNext"),nextp);} 
var snapp=positions.snap;lib.positionPic(snapC.element,$('#selectedSnap'),snapp);var dW=400; var dLeft=0.5*(divW-dW);var dsTop=270;$('#selectedSnapDescription').css({position:"absolute",left:dLeft-10,top:dsTop,width:dW});var dht=$("#selectedSnapDescription").height();util.log("dht",dht);lib.setPanelDivHeight(300+dht);} 
lib.interpolateSnapElements=function(snapC,direction,v){var snapD=snapC.snapD;var o=snapD.ordinal;var snaps=lib.snaps;if(o>=snaps.length-1)return;var nsnap=snaps[o+1]; var nsnapC=lib.buildSelectedSnap(nsnap.snapD.topic,true);
var p0=lib.positionsForSelectedSnapElements(snapC);var p1=lib.positionsForSelectedSnapElements(nsnapC);var nxtDest=p1.snap; var nxtStart=p0.nxt;var nxtNow=nxtStart.interpolate(nxtDest,v);var nextThumb=snapC.nextThumb;lib.positionPic(nextThumb,$("#selectedSnapNext"),nxtNow);var snapDest=p1.prev;var snapStart=p0.snap;var snapNow=snapStart.interpolate(snapDest,v);lib.positionPic(snapC.element,$('#selectedSnap'),snapNow);}
lib.buildInterpolators=function(snapC,direction){var rs=[];var snapD=snapC.snapD;var o=snapD.ordinal;var snaps=lib.snaps;var numSnaps=snaps.length;if(direction==1){if(o>=numSnaps-1)return;var isFirstSnap=o==0;var nsnap=snaps[o+1]; var nsnapC=lib.buildSelectedSnap(nsnap.snapD.topic,true);
var p0=lib.positionsForSelectedSnapElements(snapC);var p1=lib.positionsForSelectedSnapElements(nsnapC);if(!isFirstSnap){var prevDest=p0.prev.plus(new geom.Point(-100,0));var prevStart=p0.prev;var prevThumb=snapC.prevThumb;var intr={startRect:prevStart,destRect:prevDest,pic:prevThumb,container:$("#selectedSnapPrev")};rs.push(intr);}
var nxtDest=p1.snap; var nxtStart=p0.nxt;var nextThumb=snapC.nextThumb;var intr={startRect:nxtStart,destRect:nxtDest,pic:nextThumb,container:$("#selectedSnapNext")};rs.push(intr);var snapDest=p1.prev;var snapStart=p0.snap;intr={startRect:snapStart,destRect:snapDest,pic:snapC.element,container:$("#selectedSnap")};rs.push(intr);var cv0=snapD.coverage;var cv1=nsnapC.snapD.coverage;intr={startRect:cv0,destRect:cv1,drawRect:true}
rs.push(intr);return rs;}else{if(o==0)return;var isLastSnap=o==numSnaps-1;var isFirstSnap=o==1;var nsnap=snaps[o-1]; var nsnapC=lib.buildSelectedSnap(nsnap.snapD.topic,true);
var p0=lib.positionsForSelectedSnapElements(snapC);var p1=lib.positionsForSelectedSnapElements(nsnapC);if(!isLastSnap){var nextDest=p0.nxt.plus(new geom.Point(100,0));var nextStart=p0.nxt;var nextThumb=snapC.nextThumb;var intr={startRect:nextStart,destRect:nextDest,pic:nextThumb,container:$("#selectedSnapNext")};rs.push(intr);}
if(!isFirstSnap){var prevDest=p1.snap; var prevStart=p0.prev;var prevThumb=snapC.prevThumb;var intr={startRect:prevStart,destRect:prevDest,pic:prevThumb,container:$("#selectedSnapPrev")};rs.push(intr);}
var snapDest=p1.nxt;var snapStart=p0.snap;intr={startRect:snapStart,destRect:snapDest,pic:snapC.element,container:$("#selectedSnap")};rs.push(intr);var cv0=snapD.coverage;var cv1=nsnapC.snapD.coverage;intr={startRect:cv0,destRect:cv1,drawRect:true}
rs.push(intr);return rs;}}
lib.evalInterpolators=function(interpolators,v){var ln=interpolators.length;for(var i=0;i<ln;i++){var intr=interpolators[i];var st=intr.startRect;var dst=intr.destRect;var cp=st.interpolate(dst,v);if(intr.drawRect){var vp=lib.vp;vp.clearOverlay();vp.drawRect(cp,"image","red");}else{var pic=intr.pic;var container=intr.container;lib.positionPic(pic,container,cp);}}}
lib.snapAnimateIncrement=0.2;lib.snapAnimateDelay=30;lib.animateSnapTransition=function(interpolators,v,whenDone){if(v>=1){v=1;}
lib.evalInterpolators(interpolators,v);if(v<1){setTimeout(function(){lib.animateSnapTransition(interpolators,v+lib.snapAnimateIncrement,whenDone)},lib.snapAnimateDelay);}else{whenDone();}}
lib.toNextSnap=function(){var snaps=lib.snaps;var selsnap=lib.nowSelectedSnap;var snapD=selsnap.snapD;var o=snapD.ordinal;if(o>=snaps.length-1)return;lib.vp.setZoom(1);var ints=lib.buildInterpolators(selsnap,1);lib.animateSnapTransition(ints,0,function(){var nsnap=snaps[o+1].snapD;lib.hideSelectedSnap();lib.showSelectedSnap(nsnap);});}
lib.toPrevSnap=function(){var snaps=lib.snaps;var selsnap=lib.nowSelectedSnap;var snapD=selsnap.snapD;var o=snapD.ordinal;if(o==0)return;lib.vp.setZoom(1);var ints=lib.buildInterpolators(selsnap,-1);lib.animateSnapTransition(ints,0,function(){var nsnap=snaps[o-1].snapD;lib.hideSelectedSnap();lib.showSelectedSnap(nsnap);});}
lib.itest=function(v){var snapC=lib.nowSelectedSnap;var ints=lib.buildInterpolators(snapC,1);lib.animateSnapTransition(ints,0);}
lib.showOverlayForSnap=function(snapD){var vp=lib.vp;var cv=snapD.coverage;vp.clearOverlay();vp.clearOverlays();var ov=new imlib.Overlay("selectedSnap",cv);vp.addOverlay(ov);vp.drawOverlays();}
lib.buildSelectedSnap=function(tp,hide){var sso=lib.selectedSnaps[tp];if(sso)return sso; var snapD=lib.snapDsByTopic[tp];var o=snapD.ordinal;var snaps=lib.snaps;var sln=snaps.length;var prevThumb=null;var nextThumb=null;var prev=$('#selectedSnapPrev');var next=$('#selectedSnapNext');if(o>0){var prevSnapC=snaps[o-1];var prevSnapD=prevSnapC.snapD;var prevThumb=$("<img draggable='false' class='thumb' />");prev.append(prevThumb);var imsrc=lib.snapDthumb(prevSnapD);prevThumb.attr("src",imsrc);if(hide)prevThumb.hide();}
if(o<sln-1){var nextSnapC=snaps[o+1];var nextSnapD=nextSnapC.snapD;var nextThumb=$("<img class='thumb' />");next.append(nextThumb);var imsrc=lib.snapDthumb(nextSnapD);nextThumb.attr("src",imsrc);if(hide)nextThumb.hide();}
var sse=$('<img id="'+tp+'"/>');var ssic=$('#selectedSnap');var snapW=lib.snapWidth(snapD);ssic.append(sse);var imsrc=lib.snapDfullsize(snapD);sse.load(function(){$('#loadingMsg').hide();});$('#loadingMsg').show();sse.attr("src",imsrc);if(hide)sse.hide();var sso={element:sse,snapD:snapD,prevThumb:prevThumb,nextThumb:nextThumb};lib.selectedSnaps[tp]=sso;return sso;}
lib.showSelectedSnap=function(snapD){$('#selectedSnapPrev').show();var snapCount=lib.snaps.length;var isLastSnap=(snapD.ordinal+1)==snapCount;if(isLastSnap){$('#selectedSnapNext').hide();}else{$('#selectedSnapNext').show();}
if(snapD.ordinal==0){$('#selectedSnapPrev').hide();}else{$('#selectedSnapPrev').show();}
var lastSnap=lib.nowSelectedSnap;if(snapD){lib.nowSelectedSnap=snapD;}else{snapD=lib.nowSelectedSnap;}
var caption=snapD.caption;var description=snapD.description;if(!caption){caption="No caption";}
$('#selectedSnapCaption').html(caption);$('#selectedSnapDescription').html(description);lib.selectPanel("selectedSnap");lib.showOverlayForSnap(snapD);if(lastSnap){ lastSnap.element.hide();if(lastSnap.prevThumb)lastSnap.prevThumb.hide();if(lastSnap.nextThumb)lastSnap.nextThumb.hide();}
var sso=lib.buildSelectedSnap(snapD.topic);lib.nowSelectedSnap=sso;lib.positionSelectedSnapElements(sso);return;}
lib.selectedSnapDiv=$('<div class="selectedSnap">'+'<div id="noSnaps">No snapshots have been added to this album yet</div>'+'<div id="yesSnaps">'+'<div class="selectedSnapControls" >'+
'<span id="zoomToSnap" class="clickableElement">Zoom To</span>'+
'<span id="editSnap" class="clickableElement">Edit</span>'+'<span id="deleteSnap" class="clickableElement">Delete</span>'+'</div>'+'<div id="selectedSnapCaption"/>'+'<div class="selectedSnapImages">'+'<div id="selectedSnapPrev">'+'<div  id="selectedSnapPrevLabel" class="prevNextLabel">PREV</div>'+'<div id="prevSnapImageContainer" class="imageContainer"/>'+'</div>'+'<div id="selectedSnap">'+'<div id="loadingMsg"> loading ... </div>'+
'</div>'+'<div id="selectedSnapNext">'+'<div  id="selectedSnapNextLabel" class="prevNextLabel">NEXT</div>'+'<div id="nextSnapImageContainer" class="imageContainer"/>'+'</div>'+'<div id="selectedSnapIncoming"/>'+'<div id="selectedSnapOutgoing"/>'+'</div>'+'<div id="selectedSnapDescription"/>'+'</div>'+'</div>');lib.selectedSnapDiv.data("initializer",function(){if(lib.snaps.length==0){$('#noSnaps').show();lib.setPanelDivHeight(lib.defaultPanelHeight);$('#yesSnaps').hide();return;}else{$('#noSnaps').hide();$('#yesSnaps').show();}
if(lib.nowSelectedSnap)return;if(lib.snaps.length==0){}else{lib.showSelectedSnap(lib.snaps[0].snapD);}});lib.addSelectedSnapDiv=function(container){container.append(lib.selectedSnapDiv);lib.setPanelPanel("selectedSnap",lib.selectedSnapDiv);$('#selectedSnapPrev').click(lib.toPrevSnap);$('#selectedSnapPrev').mousedown(function(event){event.preventDefault();});lib.selectedSnapNext=$('#selectedSnapNext');$('#selectedSnapNext').click(lib.toNextSnap);$('#selectedSnapNext').mousedown(function(event){event.preventDefault();});$('#editSnap').click(lib.editSnap);lib.setClickMethod($('#zoomToSnap'),lib.zoomToSelectedSnap);$('#deleteSnap').click(function(){lib.selectPanel("deleteSnap");});lib.selectedSnapDiv.css({width:"100%",height:"100%"});}})();

(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.startDefArea=function(){lib.vp.clearOverlays();lib.vp.defAreaMode=true;lib.vp.areaDefinedCallback=lib.finishDefArea;$('#cropInstructions').show();lib.disableClickable($('#selectSnapArea'));}
lib.finishDefArea=function(area){lib.coverageModified=true;util.log("area",area.tostring());lib.vp.defAreaMode=false;lib.vp.selectedImageArea=area;lib.vp.addOverlay(new imlib.Overlay("newSnap",area));$('#cropInstructions').hide();$('#selectSnapArea').show();$('#snapFields').show();$('#createSnapButtons').show();lib.enableClickable($('#selectSnapArea'));$('#selectSnapArea').html("redefine image area");}
lib.createSnapDiv=$('<div class="createSnapDiv">'+'<div class="createSnapLine">Step 1: <span id="selectSnapArea" class="clickableElement">Define image area</span>'+'<span id="cropInstructions">drag box over the desired region</span></div>'+'<div class="createSnapLine">Step 2: Enter caption, tags, description</div>'+'<table id="snapFields">'+'<tr><td class="inputsTD">Caption<td><td><input size="60" id="snapCaption" type="text"/></td></tr>'+'<tr><td class="inputsTD">Description<td><td><textarea rows="5" cols="60" id="snapDescription"/></td></tr>'+'</table>'+'<div class="createSnapLine">3. Submit</div>'+'<div id="createSnapButtons" class="createSnapLine">'+'<span id="submitSnap" class="clickableElement">Create Snapshot</span>'+'<span id="cancelSnap" class="clickableElement">Cancel</span>'+'</div>'+'</div>');lib.creatingSnapDiv=$('<div class="creatingSnapDiv" id="creatingSnapDiv">One moment ... creating the snapshot</div>');lib.createSnapDiv.data("initializer",function(selsnap){if(selsnap){$("#submitSnap").html("Update Snapshot");$('#selectSnapArea').html("Redefine Image Area");var snapD=selsnap.snapD;util.log("editSnap",snapD);lib.zoomToSnap(snapD);lib.showOverlayForSnap(snapD);lib.enableClickable($('#selectSnapArea'))
lib.editingSnap=snapD;lib.coverageModified=false;lib.setSnapFieldValues(snapD);lib.vp.addOverlay(new imlib.Overlay("editingSnap",snapD.coverage));}else{$("#submitSnap").html("Create Snapshot");$('#selectSnapArea').html("Define Image Area");lib.editingSnap=undefined;$('#snapFields').hide();$('#createSnapButtons').hide();$('#snapCaption').attr('value',"");$('#snapDescription').attr('value',"");}
});lib.createSnapFieldValues=function(){var rs={};rs.caption=$('#snapCaption').attr("value");rs.description=$('#snapDescription').attr("value");return rs;}
lib.setSnapFieldValues=function(vls){$('#snapCaption').attr("value",vls.caption);$('#snapDescription').attr("value",vls.description);}
lib.grabTheSnap=function(){lib.vp.clearOverlays();lib.selectPanel("creatingSnap");var sdata=lib.createSnapFieldValues();var data={album:lib.albumTopic,caption:sdata.caption,description:sdata.description};data.image=lib.imD.topic;if(lib.editingSnap){var url="/api/editSnap";var snapD=lib.editingSnap;data.topic=snapD.topic;if(lib.coverageModified){data.newCrop=1
var newCoverage=lib.vp.selectedImageArea;data.coverage=newCoverage.externalize();snapD.coverage=newCoverage;}else{data.coverage=snapD.coverage.externalize();data.newCrop=0}}else{var url="/api/addSnap";data.coverage=lib.vp.selectedImageArea.externalize();data.newCrop=0}
util.log("api","coverage ",data.coverage);var cb=lib.snapCallback;util.post(url,data,function(rs){util.log("api","data returned",rs);cb(rs);},"json");util.log("api","uuuuu");}
lib.cancelTheSnap=function(){lib.vp.clearOverlays();lib.selectPanel(lib.lastPanel);}
lib.deleteSnapDiv=$('<div id="deleteSnap">'+'<div class="areYouSure">Are you sure you wish to delete this snapshot? There is no undo.</div>'+'<div>'+'<span  style="margin-left:20px" id="yesDeleteSnap" class="clickableElement">Yes, Delete</span>'+'<span   id="noDontDeleteSnap" style="margin-left:30px"  class="clickableElement">Cancel</span>'+'</div>'+'</div>');lib.deleteSnapDiv.data("initializer",function(){$('#deleteSnap .areYouSure').html('Are you sure you want to delete the snapshot "'+lib.nowSelectedSnap.snapD.caption+'"?');});lib.addCreateSnapDiv=function(container){container.append(lib.createSnapDiv);container.append(lib.creatingSnapDiv);lib.setPanelPanel("createSnap",lib.createSnapDiv);lib.setPanelPanel("creatingSnap",lib.creatingSnapDiv);$('#cropInstructions').hide();lib.createSnapDiv.hide();lib.selectSnapArea=$('#selectSnapArea');lib.setClickMethod(lib.selectSnapArea,lib.startDefArea);lib.setClickMethod($('#submitSnap'),lib.grabTheSnap);lib.setClickMethod($('#submitAlbum'),lib.createTheAlbum);lib.setClickMethod($('#cancelSnap'),lib.cancelTheSnap);container.append(lib.deleteSnapDiv);var pn=lib.setPanelPanel("deleteSnap",lib.deleteSnapDiv);pn.scalable=false;pn.height=100;$('#noDontDeleteSnap').click(function(){lib.selectPanel("selectedSnap");lib.positionSelectedSnapElements(lib.nowSelectedSnap);});$('#yesDeleteSnap').click(function(){var url="/api/deleteSnap";var snap=lib.nowSelectedSnap.snapD.topic;var data={"topic":snap};util.post(url,data,function(rs){util.log("api","data returned",rs);location.reload()},"json");});}})();
(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.aboutImageDiv=$('<div id="aboutImage"></div>');lib.aboutImageDiv.data("initializer",function(){var albumD=lib.albumD;if(albumD){var d=albumD.description;}else{var imD=lib.imD;d=imD.description;}
if(!d){d="No description yet";}
$('#aboutImage').html(d);var ht=$("#aboutImage").height();var dht=lib.defaultPanelHeight();var aht=Math.max(ht,dht);lib.setPanelDivHeight(aht);});lib.addAboutImageDiv=function(container){container.append(lib.aboutImageDiv);var pn=lib.setPanelPanel("aboutImage",lib.aboutImageDiv);pn.selfScaling=true;}})();

(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.createAlbumDiv=$('<div class="createlbumDiv">'+'<div id="createAlbumExplanation" style="text-align:center;margin-bottom:10px"></div>'+'<table id="albumFields">'+'<tr><td class="inputsTD">Album Caption<td><td><input size="40" id="albumCaption" type="text"/></td></tr>'+'<tr><td class="inputsTD">Description<td><td><textarea rows="6" cols="60" id="albumDescription"/></td></tr>'+'</table>'+'<div id="createAlbumButtons" class="buttonLine">'+'<span id="submitAlbum" class="clickableElement">Create Album</span>'+'<span id="cancelAlbum" class="clickableElement">Cancel</span>'+'</div>'+'</div>');lib.createAlbumDiv.data("initializer",function(editing){lib.editingAlbum=editing;if(editing){var a=lib.albumD;$('#createAlbumExplanation').html('Editing the Current Album');$('#albumCaption').attr("value",a.caption);$('#albumDescription').attr("value",a.description);$('#submitAlbum').html("Save");}else{$('#createAlbumExplanation').html('Creating a New Album');$('#albumCaption').attr("value","");$('#albumDescription').attr("value","");$('#submitAlbum').html("Create Album (and go there)");}});lib.albumDiv=$('<div class="albumDiv">'+'<div class="albumLine" id="albumExplanation">An album is a group of snapshots from an image. Each image may have several assocatied albums.</div>'+'<div class="albumLine" id="albumOwner"></div>'+'<div class="albumButtonLine">'+'<span id="editAlbum" class="clickableElement">Edit This Album</span>'+'<span id="deleteAlbum" class="clickableElement">Delete This Album</span>'+'<span id="createAlbum" class="clickableElement">Create New Album</span>'+'</div>'+'<div class="albumLine" id="aboutOtherAlbums"></div>'+'<div id="otherAlbums"></div>'+'</div>');lib.albumDiv.data("initializer",function initAlbumDiv(){if(lib.myAlbum){$('#editAlbum').show();$('#deleteAlbum').show();}else{$('#editAlbum').hide();$('#deleteAlbum').hide();}
if(idv.loggedInUser){$('#createAlbum').show();}else{$('#createAlbum').hide();}
var albums=lib.albumDs;var ln=albums.length;var album=lib.albumD;if(album){$('#albumOwner').html("The owner of this album is: "+lib.pathLast(album.owner));var atp=album.topic;if(ln==1){$('#aboutOtherAlbums').html('There are no other albums associated with this image.');}else{$('#aboutOtherAlbums').html('These are the other albums associated with this image:');}}else{if(ln==0){$('#aboutOtherAlbums').html('These are no albums associated with this image yet.');}else{$('#aboutOtherAlbums').html('These are the albums associated with this image:');}}
var oae=$('#otherAlbums');oae.empty();for(var i=0;i<ln;i++){var ca=albums[i];if(ca.topic==atp)continue;var cc=ca.caption;var uname=lib.pathLast(lib.pathLast(ca.owner));var aline=$('<div class="albumLink"><span>'+cc+'</span> by '+uname+' </div>');oae.append(aline);(function(tp){ aline.click(function(){location.href="/topic"+tp;});})(ca.topic);}});lib.deleteAlbumDiv=$('<div id="deleteAlbum">'+'<div class="areYouSure">Are you sure you wish to delete this album, and its snapshots? There is no undo.</div>'+'<div>'+'<span  style="margin-left:20px" id="yesDeleteAlbum" class="clickableElement">Yes, Delete</span>'+'<span   id="noDontDeleteAlbum" style="margin-left:30px"  class="clickableElement">Cancel</span>'+'</div>'+'</div>');lib.createAlbumFieldValues=function(){var rs={};rs.caption=$('#albumCaption').attr("value");rs.description=$('#albumDescription').attr("value");return rs;}
lib.createTheAlbum=function(){var sdata=lib.createAlbumFieldValues();var data={caption:sdata.caption,description:sdata.description};data.image=lib.imD.topic;if(lib.editingAlbum){var url="/api/editAlbum";data.topic=lib.albumD.topic;}else{var url="/api/addAlbum";}
var cb=lib.createAlbumCallback;util.post(url,data,function(rs){util.log("api","data returned",rs);location.href="/topic"+rs.value.topic;lib.albumDs.push(rs.value);lib.selectPanel("albums");},"json");util.log("api","uuuuu");}
lib.addAlbumDiv=function(container){container.append(lib.createAlbumDiv);lib.setPanelPanel("createAlbum",lib.createAlbumDiv);$('#cancelAlbum').click(function(){lib.selectPanel("albums",false);});container.append(lib.albumDiv);$('#editAlbum').click(function(){lib.selectPanel("createAlbum",true);});container.append(lib.deleteAlbumDiv);var pn=lib.setPanelPanel("deleteAlbum",lib.deleteAlbumDiv);pn.scalable=false;pn.height=100;lib.setClickMethod($('#submitAlbum'),lib.createTheAlbum);$('#deleteAlbum').click(function(){lib.selectPanel("deleteAlbum");});$('#createAlbum').click(function(){lib.selectPanel("createAlbum",false);});$('#noDontDeleteAlbum').click(function(){lib.selectPanel("albums");});$('#yesDeleteAlbum').click(function(){var url="/api/deleteAlbum";var album=lib.albumD.topic;var data={"topic":album};util.post(url,data,function(rs){util.log("api","data returned",rs);location.href="/";},"json");});};})();
(function(){var lib=page;var geom=exports.GEOM2D;var imlib=exports.IMAGE;var com=idv.common;var util=idv.util;lib.renderControls=function(container){var cnt=container;var elements={};var aboutImageActivator=$('<span style="float:right" class="clickableElement">about image</span>');cnt.append(aboutImageActivator);var pn=lib.setPanelActivator("aboutImage",aboutImageActivator);pn.scalable=false;pn.height=null;var albumsActivator=$('<span style="float:right" class="clickableElement">albums</span>');cnt.append(albumsActivator);lib.setPanelPanel("albums",lib.albumDiv);lib.setPanelActivator("albums",albumsActivator);if(loggedInUser){var createSnapActivator=$('<span style="float:right" class="clickableElement">new snap</span>');cnt.append(createSnapActivator);pn=lib.setPanelActivator("createSnap",createSnapActivator);pn.scalable=false;pn.height=null;}
var selectedSnapActivator=$('<span style="float:right" class="clickableElement">1 by 1</span>');cnt.append(selectedSnapActivator);pn=lib.setPanelActivator("selectedSnap",selectedSnapActivator);pn.selfScaling=true;var snapArrayActivator=$('<span style="float:right" class="clickableElement">all snaps</span>');cnt.append(snapArrayActivator);pn=lib.setPanelActivator("snapArray",snapArrayActivator);pn.selfScaling=true;var setZoom=function(z){lib.vp.setZoom(z);};var getZoom=function(){return lib.vp.zoom;};var zmropts={container:cnt,maxZoom:lib.vp.maxZoom,setZoom:setZoom,getZoom:getZoom,zoomIncrement:1.05,zoomFactor:2,zoomDelay:50};var zmr=new idv.zoomSlider(zmropts);lib.zSlider=zmr;lib.vp.zoomCallbacks.push(function(z){lib.zSlider.positionSliderFromZoom(z);});var viewAll=$('<span class="clickableElement">view all</span>');viewAll.css({position:"absolute",left:lib.zSlider.totalWidth+10});cnt.append(viewAll);viewAll.click(function(){lib.vp.setZoom(1);});var gap=$('<div class="gap"></div>');container.append(gap);}
lib.setParams=function(imD){var imTopic=imD.topic
lib.imName=imTopic.split("/")[2]
lib.snapThumbMinWidth=100;lib.snapThumbMargin=5;lib.snapThumbHeight=50;lib.snapThumbCaptionHeight=10;lib.snapGapX=10;lib.snapGapY=25;lib.snapHeight=200; lib.snapTop=20;lib.thumbTop=80;lib.zoomDelay=50;lib.zoomIncrement=1.05;lib.maxZoom=256; lib.initialZoom=1;var unscaledWidth=500;var margin=20; var aRatio=0.35;lib.aspectRatio=aRatio;var minScale=1.3;var vpHeight=unscaledWidth*aRatio;lib.standardPanelHeight=vpHeight;lib.selectedSnapPanelHeight=400;var theDivStack=new lib.divStack(margin,minScale,unscaledWidth);theDivStack.includeLightbox=false;lib.theDivStack=theDivStack;lib.topDiv=new lib.scalableDiv({height:10,scalable:false,name:"top"});theDivStack.addDiv(lib.topDiv);lib.titleSdiv=new lib.scalableDiv({height:30,scalable:false,name:"title"});theDivStack.addDiv(lib.titleSdiv);lib.vpSdiv=new lib.scalableDiv({height:vpHeight,scalable:true,name:"vp"});theDivStack.addDiv(lib.vpSdiv);lib.controlSdiv=new lib.scalableDiv({height:50,scalable:false,name:"control"});theDivStack.addDiv(lib.controlSdiv);lib.panelSdiv=new lib.scalableDiv({height:vpHeight,scalable:true,name:"panel"});theDivStack.addDiv(lib.panelSdiv);lib.bottomSdiv=new lib.scalableDiv({height:40,scalable:false,name:"bottom"});theDivStack.addDiv(lib.bottomSdiv);lib.theDivStack.placeDivs();lib.imD=imD;var imDimx=imD.dimensions.x;var imDimy=imD.dimensions.y;var imDim=new geom.Point(imDimx,imDimy);var imDir=imD.imDir;lib.depthBias=0; lib.image=new imlib.Image(imDim,imDir);lib.tiling=new imlib.Tiling(lib.image,256,1,imD.tilingDir,imD.tilingUrl,imD.tilingDepthBump);lib.maxDepth=lib.tiling.depth;}
lib.scaleRect=function(rect,corner,scale){var nex=rect.extent.times(scale);var rs=new geom.Rect(corner,nex);return rs;}
lib.defaultPanelHeight=function(){return lib.standardPanelHeight*lib.theDivStack.scale;}
lib.placeDivs=function(){lib.theDivStack.computeScale();var scale=lib.theDivStack.scale;lib.vp.scale=scale;lib.theDivStack.placeDivs();lib.vp.refresh();}
lib.genDivs=function(){var b=$('body');var fullTitle=lib.imD.title+":"+lib.albumD.caption;lib.titleDiv=imlib.genTitleBar(fullTitle,true,true);lib.titleSdiv.element=lib.titleDiv;lib.vpDiv=$('<div class="viewport"/>');b.append(lib.vpDiv);lib.vpSdiv.element=lib.vpDiv;var vpRect=lib.vpSdiv.rect();lib.vpCanvas=imlib.genCanvas({container:lib.vpDiv,extent:vpRect.extent,zIndex:100,backgroundColor:"#000000"});lib.ovCanvas=imlib.genCanvas({container:lib.vpDiv,extent:vpRect.extent,zIndex:200,backgroundColor:"transparent"}); lib.vpSdiv.afterPlacement=function(){if(lib.vp){lib.vp.scale=lib.theDivStack.scale;var rc=lib.vpSdiv.rect();util.log("layout","rect",rc.corner.x,rc.corner.y,rc.extent.x,rc.extent.y);com.setRect(lib.vpDiv,rc,lib.vpCanvas,lib.ovCanvas);lib.vp.refresh();}};lib.controlDiv=$('<div class="controls"/>');b.append(lib.controlDiv);lib.controlSdiv.element=lib.controlDiv;lib.panelDiv=$('<div class="snapshots" />'); b.append(lib.panelDiv);lib.panelSdiv.element=lib.panelDiv;lib.panels={};lib.bottomDiv=$('<div class="bottomDiv"></div>');b.append(lib.bottomDiv);lib.bottomSdiv.element=lib.bottomDiv;lib.addSnapArrayDiv(lib.panelDiv);lib.addSelectedSnapDiv(lib.panelDiv);lib.addCreateSnapDiv(lib.panelDiv);lib.addAlbumDiv(lib.panelDiv);lib.addAboutImageDiv(lib.panelDiv);}
lib.genViewports=function(){lib.tiling.createTiles();var vpRect=lib.vpSdiv.rect(true);var vp=new imlib.Viewport(lib.vpCanvas,lib.tiling,vpRect.extent,lib.ovCanvas);lib.vp=vp;vp.depthBias=lib.depthBias;vp.zoom=lib.initialZoom;lib.vp=vp;imlib.mainVP=vp;vp.maxZoom=lib.maxZoom;vp.maxDepth=lib.maxDepth;vp.depthBump=lib.imD.zoomDepthBump;lib.renderControls(lib.controlDiv);lib.panControl=new imlib.PanControl(lib.vpDiv,vp);}
lib.test=function(){var ov=new imlib.Overlay("test",new geom.Rect(new geom.Point(12000,2000),new geom.Point(5000,1000)));lib.vp.addOverlay(ov);}
lib.initialize=function(imD,albumD,albumDs,loggedInUser){if(!albumD){imlib.genTitleBar("No Such Album");return;}
lib.setParams(imD);var albumTopic=albumD.topic;var sp=albumTopic.split("/");var spln=sp.length;lib.albumId=sp[spln-1];lib.albumD=albumD;lib.albumDs=albumDs;lib.albumTopic=albumTopic;idv.loggedInUser=loggedInUser;lib.myAlbum=loggedInUser==albumD.owner;lib.genDivs();lib.genViewports();$(window).resize(function(){util.log("resize",$(window).width());lib.placeDivs();lib.positionSnaps();});lib.placeDivs();lib.addSnaps();lib.hookupPanelActivators();lib.selectPanel("snapArray");}
})();
